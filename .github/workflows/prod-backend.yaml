name: Production on cPanel - API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code ðŸšš
        uses: actions/checkout@v3

      - name: Preventing Cache
        run: rm ./package.json

      - name: NPM Install
        run: cd apps/backend && npm install && npm run build && zip -qq -r build.zip . -x *.git* node_modules/\* test/\* .Dockerfile docker-compose.yaml

      - name: Preparing Enviroment
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd ${{ secrets.BACKEND_APP_PATH }}
            rm -rdf src
            rm -rdf node_modules
            rm -rdf dist

      - name: Sending build.zip on cPanel
        uses: appleboy/scp-action@master
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "apps/backend/build.zip"
          target: "${{ secrets.BACKEND_APP_PATH }}"
          strip_components: 2

      - name: Setting Enviroment
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ${{ secrets.SSH_USERNAME }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            source ${{ secrets.NODE_ENV }}
            cd ${{ secrets.BACKEND_APP_PATH }}
            unzip -qq -o build.zip
            rm build.zip
            npm ci
            mkdir tmp
            touch tmp/restart.txt
            exit
